name: Docker-Build-(master)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  docker-build-master:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Make envfile
        run: |
          pwd
          ls -a
          echo -----------------------
          touch .env
          echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
          echo DEBUG=${{ secrets.DEBUG }} >> .env
          echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
          echo PG_ENGINE=${{ secrets.PG_ENGINE }} >> .env
          echo PG_DB=${{ secrets.PG_DB }} >> .env
          echo PG_USER=${{ secrets.PG_USER }} >> .env
          echo PG_PASSWORD=${{ secrets.PG_PASSWORD }} >> .env
          echo PG_HOST=${{ secrets.PG_HOST }} >> .env
          echo PG_PORT=${{ secrets.PG_PORT }} >> .env
          echo SIGNING_KEY=${{ secrets.SIGNING_KEY }} >> .env
          echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
          echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env
          echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env
          echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
          echo DOMAIN=${{ secrets.DOMAIN }} >> .env
          echo CELERY_BACKEND=${{secrets.CELERY_BACKEND}} >> .env
          echo CELERY_BROKER=${{secrets.CELERY_BROKER}} >> .env
          echo -----------------------
          cat .env
          pwd
          ls -a
      - name: Make envfile in client folder
        run: |
          pwd
          cd ./client
          ls -a 
          echo -----------------------
          touch .env
          echo WDS_SOCKET_PORT=${{ secrets.WDS_SOCKET_PORT }} >> .env
          echo -----------------------
          cat .env
          echo -----------------------
          pwd
          ls -a
      - name: build docker
        run: docker compose up --build -d --remove-orphans